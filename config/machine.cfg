## Voron Design VORON2 250/300/350mm SKR 1.4 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Fine tune E steps                    [extruder] section

##  Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "Generic 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

##========================== Pin Definitions ========================
## X
## Drive0_STEP_PIN         PE2
## Drive0_DIR_PIN          PC5
## Drive0_ENABLE_PIN       PF11
## Drive0_STOP_PIN         PG12 #IO0
## Drive0_UART_PIN         PC4

## Y
## Drive1_STEP_PIN         PE3
## Drive1_DIR_PIN          PF13
## Drive1_ENABLE_PIN       PF14
## Drive1_STOP_PIN         PG11 #IO1
## Drive1_UART_PIN         PF12

## E
## Drive2_STEP_PIN         PE4
## Drive2_DIR_PIN          PG0
## Drive2_ENABLE_PIN       PG1
## Drive2_STOP_PIN         PG10 #IO2
## Drive2_UART_PIN         PF15

## Z
## Drive3_STEP_PIN         PE14
## Drive3_DIR_PIN          PE8
## Drive3_ENABLE_PIN       PE9
## Drive3_UART_PIN         PE7

## Z1
## Drive4_STEP_PIN         PE15
## Drive4_DIR_PIN          PE11
## Drive4_ENABLE_PIN       PF2
## Drive4_UART_PIN         PE10

## Z2
## Drive5_STEP_PIN         PE1
## Drive5_DIR_PIN          PF0
## Drive5_ENABLE_PIN       PC15
## Drive5_UART_PIN         PF1

## Z3
## Drive6_STEP_PIN         PE0
## Drive6_DIR_PIN          PG3
## Drive6_ENABLE_PIN       PG4
## Drive6_UART_PIN         PG2

## Drive7_STEP_PIN         PE6
## Drive7_DIR_PIN          PG6
## Drive7_ENABLE_PIN       PG7
## Drive7_UART_PIN         PG5

##   TMC SPI MODE
## TMC MOSI           PB4
## TMC MISO           PB5
## TMC SCK            PB3

## HEAT0              PB0
## HEAT1              PB1
## HEAT2              PC7
## HEAT3              PF7
## HEAT4              PF6

## BED                PE5

## TH0 (H0 Temp)      PF4    #ADC0
## TH1 (H1 Temp)      PF5    #ADC1
## TH2 (H2 Temp)      PF9    #ADC2
## TH3 (H3 Temp)      PF10   #ADC3
## TH4 (H4 Temp)      PC0    #ADC4
## TB  (Bed Temp)     PC1    #ADC5

## FAN0               PA0
## FAN1               PA1
## FAN2               PA2
## FAN3               PA3
## FAN4               PA15
## FAN5               PB11
## FAN6               PB10
## FAN7               PD12
## FAN8               PD14
## FAN9               PD15

## SERVO              PC6   #BLTOUCH
## PROBE              PC3   #BLTOUCH

##accel
##########################################
# 5V # GND # PD0 # PD1 # PD3 # PD4 # PD5 #
##########################################

[mcu]
##  MCU for X/Y/E steppers main MCU
##  [X in X] - B Motor
##  [Y in Y] - A Motor
##  [E in E0] - Extruder
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_1E003A000947393436343431-if00
##--------------------------------------------------------------------
##  MCU for Z steppers
##  [Z in X] - Front Left
##  [Z1 in Y] - Rear Left
##  [Z2 in Z] - Rear Right
##  [Z3 in E0]- Front Right
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify

[temperature_sensor FLY-Super8]
sensor_type: temperature_mcu
[temperature_sensor FLY-pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[printer]
kinematics: corexy
max_velocity: 450
max_accel: 7000             #Max 4000
max_accel_to_decel: 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 500
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

[stepper_x]
##  Connected to X on mcu_xye (B Motor)
step_pin: PE2
dir_pin: PC5
enable_pin: !PF11
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: PG12
position_min: 0
position_endstop: 345
position_max: 345
##--------------------------------------------------------------------
homing_speed: 40   #Max 100
second_homing_speed: 5
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: True
run_current: 0.8
#hold_current: 0.7
sense_resistor: 0.110
#stealthchop_threshold: 0

[stepper_y]
step_pin: PE3
dir_pin: PF13
enable_pin: !PF14
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: PG11
position_min: 0
position_endstop: 357
position_max: 357

##--------------------------------------------------------------------
homing_speed: 40  #Max 100
second_homing_speed: 5
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PF12
interpolate: True
run_current: 0.8
#hold_current: 0.7
sense_resistor: 0.110
#stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
[stepper_z]
step_pin: PE14
dir_pin: PE8
enable_pin: !PE9
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
#endstop_pin: probe:z_virtual_endstop
endstop_pin: PG10
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.198
##--------------------------------------------------------------------
position_endstop: 4.100
position_max: 320
position_min: -5
homing_speed: 6
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PE7
interpolate: False
run_current: 1.2
sense_resistor: 0.110
#stealthchop_threshold: 1000


##  Z1 Stepper - Rear Left
[stepper_z1]
step_pin: PE15
dir_pin: !PE11
enable_pin: !PF2

rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z1]
uart_pin: PE10
interpolate: False
run_current: 1.2
sense_resistor: 0.110
#stealthchop_threshold: 1000

##  Z2 Stepper - Rear Right


[stepper_z2]
step_pin: PE6
dir_pin: PG6
enable_pin: !PG7

rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PG5
interpolate: False
run_current: 1.2
sense_resistor: 0.110
#stealthchop_threshold: 1000


##  Z3 Stepper - Front Right
[stepper_z3]
step_pin: PE0
dir_pin: !PG3
enable_pin: !PG4

rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z3]
uart_pin: PG2
interpolate: False
run_current: 1.2
sense_resistor: 0.110
#stealthchop_threshold: 1000
#####################################################################
#   Extruder
#####################################################################

#   E0 on MCU X/Y
[extruder]
step_pin: PE4
dir_pin: PG0
enable_pin: !PG1

##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 5.7   #Bondtech LGX
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
#gear_ratio: 50:17               #LGX Gear Ratio??
microsteps: 16
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PB0
sensor_pin: PF4
sensor_type: PT1000
pullup_resistor: 4700 ####
min_temp: 10
max_temp: 350
max_power: 1.0
min_extrude_temp: 170
max_extrude_cross_section: 50.0
max_extrude_only_distance: 200
max_extrude_only_velocity: 15

## PID Tuning
control: pid
pid_Kp: 22.156
pid_Ki: 1.969
pid_Kd: 62.315

##  Try to keep pressure_advance below 1.0
pressure_advance: 0.03
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

##  E0 on MCU X/Y
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PF15
interpolate: false
run_current: 0.6 #0.45 to 0.6 LGX Lite
hold_current: 0.4
sense_resistor: 0.110
#stealthchop_threshold: 0

[verify_heater extruder]
max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 20
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 10
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 0.3
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - Z board, Fan Pin
heater_pin: PB1
sensor_type: Generic 3950
sensor_pin: PC1
##  Adjust Max Power so your heater doesn't warp your bed
pwm_cycle_time: 0.017
max_power: 0.7
min_temp: 0
max_temp: 140
control: pid
pid_Kp: 48.415  
pid_Ki: 2.110
pid_Kd: 277.782

[temperature_sensor top_bed]
gcode_id: TB
sensor_type: ATC Semitec 104GT-2
sensor_pin: PF9
;smooth_time: 2.0
min_temp: 0
max_temp: 140



#####################################################################
#   Mesh Bed Leveling
#####################################################################

[bed_mesh]
speed: 450
horizontal_move_z: 6
mesh_min: 40,40
mesh_max: 300,300
probe_count: 7,7
algorithm: bicubic
relative_reference_index: 0
move_check_distance: 4
split_delta_z: .02

#####################################################################
#   Fan Control
#####################################################################

[heater_fan hotend_fan]
##  Hotend Fan - XYE board, HE1 Connector
pin: PA3
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
##  Print Cooling Fan - XYE board, Fan Pin
pin: PA1
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
#off_below: 0.10

[controller_fan controller]

pin: PA2
max_power: 1.0
kick_start_time: 0.5
stepper: stepper_x
fan_speed: 1
cycle_time: 0.15
stepper: stepper_z
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".

[controller_fan nevermore]

pin: PD14
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 1.0
off_below: 0.5
heater: extruder
idle_timeout: 600



#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 3600   # after 1 hour, shut off heaters and de-energize the motors

#[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#home_xy_position: 122,354
#speed:200
#z_hop:10
#move_to_previous: False

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   30,25
   30,275
   320,275
   320,25

#--------------------------------------------------------------------
speed: 450
horizontal_move_z: 12
retries: 5
retry_tolerance: 0.01
max_adjust: 10

#####################################################################
#   Input Shaper
#####################################################################
[input_shaper]
shaper_freq_x: 87.8  # frequency for the X mark of the test model
shaper_type_x: 2hump_ei
shaper_freq_y: 63.4  # frequency for the Y mark of the test model
shaper_type_y: ei
##########################################
# 5V # GND # PD0 # PD1 # PD3 # PD4 # PD5 #
##########################################
[adxl345]
cs_pin: PD1 #CS
#   The SPI enable pin for the sensor. This parameter must be provided.
#spi_speed: 5000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 5000000.
#spi_bus:
spi_software_sclk_pin: PD3 #SCL
spi_software_mosi_pin: PD5 #SDA
spi_software_miso_pin: PD4 #SDO
#   See the "common SPI settings" section for a description of the
#   above parameters.
axes_map: z, y, x
#   The accelerometer axis for each of the printer's X, Y, and Z axes.
#   This may be useful if the accelerometer is mounted in an
#   orientation that does not match the printer orientation. For
#   example, one could set this to "y, x, z" to swap the X and Y axes.
#   It is also possible to negate an axis if the accelerometer
#   direction is reversed (eg, "x, z, -y"). The default is "x, y, z".
#rate: 3200
#   Output data rate for ADXL345. ADXL345 supports the following data
#   rates: 3200, 1600, 800, 400, 200, 100, 50, and 25. Note that it is
#   not recommended to change this rate from the default 3200, and
#   rates below 800 will considerably affect the quality of resonance
#   measurements.

[resonance_tester]
accel_chip: adxl345
probe_points:
    150,150,20

[resonance_tester]
#probe_points:
#   A list of X, Y, Z coordinates of points (one point per line) to test
#   resonances at. At least one point is required. Make sure that all
#   points with some safety margin in XY plane (~a few centimeters)
#   are reachable by the toolhead.
#accel_chip:
#   A name of the accelerometer chip to use for measurements. If
#   adxl345 chip was defined without an explicit name, this parameter
#   can simply reference it as "accel_chip: adxl345", otherwise an
#   explicit name must be supplied as well, e.g. "accel_chip: adxl345
#   my_chip_name". Either this, or the next two parameters must be
#   set.
#accel_chip_x:
#accel_chip_y:
#   Names of the accelerometer chips to use for measurements for each
#   of the axis. Can be useful, for instance, on bed slinger printer,
#   if two separate accelerometers are mounted on the bed (for Y axis)
#   and on the toolhead (for X axis). These parameters have the same
#   format as 'accel_chip' parameter. Only 'accel_chip' or these two
#   parameters must be provided.
#max_smoothing:
#   Maximum input shaper smoothing to allow for each axis during shaper
#   auto-calibration (with 'SHAPER_CALIBRATE' command). By default no
#   maximum smoothing is specified. Refer to Measuring_Resonances guide
#   for more details on using this feature.
#min_freq: 5
#   Minimum frequency to test for resonances. The default is 5 Hz.
#max_freq: 133.33
#   Maximum frequency to test for resonances. The default is 133.33 Hz.
#accel_per_hz: 75
#   This parameter is used to determine which acceleration to use to
#   test a specific frequency: accel = accel_per_hz * freq. Higher the
#   value, the higher is the energy of the oscillations. Can be set to
#   a lower than the default value if the resonances get too strong on
#   the printer. However, lower values make measurements of
#   high-frequency resonances less precise. The default value is 75
#   (mm/sec).
#hz_per_sec: 1
#   Determines the speed of the test. When testing all frequencies in
#   range [min_freq, max_freq], each second the frequency increases by
#   hz_per_sec. Small values make the test slow, and the large values
#   will decrease the precision of the test. The default value is 1.0
#   (Hz/sec == sec^-2).

